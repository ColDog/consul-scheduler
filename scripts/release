#!/usr/bin/env bash


version=${1}
message="Release of version "${1}
project_path="coldog/sked"
repo="github.com/${project_path}"
name="sked"

echo releasing ${version} with ${message}

set -e

go install ${repo}

source .env

if [ ${version} = "v" ]; then
    echo "version must be given"
    exit 1
fi

if git tag -l | grep -Fxq ${version}; then
    echo "version already exists"
    exit 1
fi

> version.go && printf "package main\nconst VERSION = \"${version}\"\n" >> version.go

# handle git stuff
git add -A && git commit -m "${message}"
git tag ${version} -m "${message}"
git push origin --all
git push origin --tags

sleep 2

# create release through github api
payload='{"tag_name": "'${version}'","target_commitish": "master","name": "'${version}'","body": "'${message}'"}'
body=$( curl --data "${payload}" https://api.github.com/repos/${project_path}/releases?access_token=${GITHUB_TOKEN} )

echo $body
id=$( echo ${body} | python -c 'import json,sys;obj=json.load(sys.stdin);print obj["id"]' )

echo ${id}

# create compilations
echo "begin compiling"

go install ${repo}
$GOPATH/bin/${name} -v

# future versions to release: linux
for d in linux-amd64 linux-arm darwin-amd64 windows-amd64
do
    echo " "
    echo "building: "${d}

    arch=$( echo $x | cut -d'-' -f 2 )
    os=$( echo $x | cut -d'-' -f 1 )
    release_name=${name}_${d}-${version}

    env GOOS=${os} GOARCH=${arch} go build -o dist/${release_name} ${repo}

    # for the docker build later
    if [ ${d} = "linux-amd64" ]; then
        cp dist/${release_name} dist/${name}_linux-amd64-latest
    fi

    cd dist
    curl -XPOST \
            --data-binary @${release_name} \
            -H "Content-Type:application/octet-stream" \
            "https://uploads.github.com/repos/${project_path}/releases/${id}/assets?access_token=${GITHUB_TOKEN}&name=${release_name}"

    cd ../
done

# mac quickstart
mkdir -p dist/examples-${version}
cp -r examples dist/examples-${version}/
cp Vagrantfile dist/examples-${version}/
cp readme.md dist/examples-${version}/
cp dist/${name}_darwin-amd64-${version} dist/examples-${version}/sked


cd dist
zip -r quickstart-${version}.zip examples-${version}
curl -XPOST \
        --data-binary @quickstart-${version}.zip \
        -H "Content-Type:application/octet-stream" \
        "https://uploads.github.com/repos/${project_path}/releases/${id}/assets?access_token=${GITHUB_TOKEN}&name=quickstart-${version}.zip"

cd ../

#echo "begin docker pushing"
docker build -t coldog/sked:${version} .
docker tag coldog/sked:${version} coldog/sked:${version}
docker tag coldog/sked:${version} coldog/sked:latest
docker push coldog/sked:${version}
docker push coldog/sked:latest
